name: Update Documentation

# Trigger the workflow on every push to the main branch
on:
  push:
    paths:
      - 'src/**'
      - 'exe/**'
      - 'stack.yaml'
      - 'package.yaml'
      - 'Dockerfile'
      - '.github/workflows/update-docs.yml'
      - 'docker-compose.yml'

jobs:
  update-doc:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    # Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
    
    # Cache Docker layers
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # Start the Docker application
    - name: Start Docker Compose
      run: docker-compose up -d
    
    # Wait for the service to be available
    - name: Wait for the service to be up
      run: |
        for i in {1..30}; do
          if curl --output /dev/null --silent --head --fail http://localhost:8080/docs; then
            echo "Service is up!"
            exit 0
          fi
          echo "Waiting for the service..."
          sleep 5
        done
        echo "Service did not start in time" >&2
        exit 1

    # Run curl to download the documentation file
    - name: Download Documentation File
      run: |
        mkdir -p docs  # Create a folder for the docs if it doesn't exist
        curl http://localhost:8080/docs --output docs/documentation.txt

    # Commit and push the updated file back to the repository
    - name: Commit and Push Documentation
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add docs/documentation.txt
        git commit -m "Update documentation on push"
        git push